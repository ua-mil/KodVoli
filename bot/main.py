import os
import feedparser
import telebot
import requests
import time
import schedule

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")

bot = telebot.TeleBot(BOT_TOKEN)
sent_links = set()

# === AI –∑–∞–ø–∏—Ç–∏ ===
def generate_openrouter_response(prompt):
    try:
        response = requests.post(
            "https://openrouter.ai/api/v1/chat/completions",
            headers={
                "Authorization": f"Bearer {OPENROUTER_API_KEY}",
                "HTTP-Referer": "https://yourproject.com",
                "X-Title": "KodVoliBot"
            },
            json={
                "model": "openai/gpt-3.5-turbo",
                "messages": [{"role": "user", "content": prompt}]
            }
        )
        data = response.json()
        return data["choices"][0]["message"]["content"].strip()
    except Exception as e:
        print(f"[AI ERROR] {e}")
        return ""

# === –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ ===
def fetch_and_send_news():
    print("–û–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–æ–≤–∏–Ω...")
    feeds = {
        "–£–ù–Ü–ê–ù": "https://www.unian.ua/rss/index.rss",
        "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –ø—Ä–∞–≤–¥–∞": "https://www.pravda.com.ua/rss/"
    }

    for source, url in feeds.items():
        feed = feedparser.parse(url)
        for entry in feed.entries[:3]:
            if entry.link not in sent_links:
                sent_links.add(entry.link)

                title = entry.title
                link = entry.link

                quote = generate_openrouter_response(
                    f"–ù–∞–ø–∏—à–∏ —Ñ—ñ–ª–æ—Å–æ—Ñ—Å—å–∫—É –∞–±–æ –º—ñ—Å—Ç–∏—á–Ω—É —É–∫—Ä–∞—ó–Ω—Å—å–∫—É —Ü–∏—Ç–∞—Ç—É, —è–∫–∞ –ø—ñ–¥—ñ–π–¥–µ –¥–æ –Ω–æ–≤–∏–Ω–∏: \"{title}\""
                )

                meme = generate_openrouter_response(
                    f"–ü—Ä–∏–¥—É–º–∞–π –∫–æ—Ä–æ—Ç–∫–∏–π —ñ—Ä–æ–Ω—ñ—á–Ω–∏–π –º–µ–º-–∫–æ–º–µ–Ω—Ç–∞—Ä —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é –¥–æ –Ω–æ–≤–∏–Ω–∏: \"{title}\". "
                    "–§–æ—Ä–º–∞—Ç: –∫–æ—Ä–æ—Ç–∫–∏–π, —è–∫ –¥–ª—è Telegram-–±–æ—Ç–∞, –º–∞–∫—Å–∏–º—É–º 1-2 —Ä—è–¥–∫–∏."
                )

                message = (
                    f"<b>{source}</b>\n"
                    f"<a href='{link}'>{title}</a>\n\n"
                    f"üß† <i>{quote}</i>\n\n"
                    f"üòè <b>–ú–µ–º:</b>\n{meme}"
                )

                try:
                    bot.send_message(CHAT_ID, message, parse_mode="HTML", disable_web_page_preview=False)
                    print(f"–ù–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–æ–≤–∏–Ω—É: {title}")
                except Exception as e:
                    print(f"–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è: {e}")
                time.sleep(3)

# === –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è ===
schedule.every(1).hours.do(fetch_and_send_news)

if __name__ == "__main__":
    fetch_and_send_news()
    while True:
        schedule.run_pending()
        time.sleep(60)